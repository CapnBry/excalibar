; This is a sample .ini file for the DAoC mapper.
; Comments start with a semicolon, like this.

; This is a windows-style (actually Python ConfigParser-style) config file.
; Sections begin with [section-name]
; Options look like option=value

[maps]            ; Global settings live in this section.
mode=color        ; color or greyscale. Greyscale is mostly untested.

; The byline goes at the bottom right-hand edge of the image. Comment it out
; to turn it off (and no, I don't mind if you turn it off or change it)
;byline = DAoC Mapper / www.randomly.org
;byline = No map for zone
bylinefont = 6x12-ISO8859-1.pil

; Include other .ini's like this. 
; Note that any option beginning with 'include' can be used, but you can
; only use each option name once! Also note there's no loop detection..
include = local.ini

; Configure the renderers to use here. Each must have a section, below.
; They are executed in the order given.

; This default does *everything*. You probably want to tone things down a bit
; for real maps. Each renderer named here is configured in a section below.
renderers = background, river, bumpmap, contours, trees, structures, bounds, grid2, grid
;renderers = background, bumpmap
;renderers = lightgrey, grid2, grid


; Each of the following sections configures a renderer named above. The
; renderer names don't matter; what matters is the 'type=' value.
;
; Valid types are:
;   solid: draws a solid color (for backgrounds etc)
;   background: draws the texture background extracted from texNNN.mpk
;   river: draws rivers
;   bumpmap: bumpmaps the current image using the terrain heightmap.
;   fixture: draws fixtures
;   bounds: draws bounds ("invisible walls")
;   grid: draws a coordinate grid
;   caption: draw some captions

[solidgrey]
type = solid
color = 128,128,128,255    ; RGBA color to use (or single-value for greyscale)

[lightgrey]
type = solid
color = 204,204,204,255    ; RGBA color to use (or single-value for greyscale)


[background]
type = background
; No extra params.

[bounds]
type = bounds
alpha = 90       ; alpha of bounds color
color = 150,0,0  ; color to fill prohibited area

; Fonts, if specified, turn on coordinate labels on the grid lines.
; Unfortunately, you still have to select a font that's the right size for
; your image by hand.
[grid]
type = grid
interval = 10000 ; interval between coordinate lines
color = 0,0,0    ; color of lines
alpha = 100      ; alpha of lines
;font = 6x12-ISO8859-1.pil
;font = timR24-ISO8859-1.pil  ; font for coordinate labels
fontcolor = 51,51,51      ; color of coordinate labels

; This does the sub-grid every 1000 units (more transparent, no labels)
[grid2]
type = grid
interval = 1000 ; interval between coordinate lines
color = 0,0,0    ; color of lines
alpha = 50      ; alpha of lines

[captions]
type = caption
source = town-captions       ; section containing caption info
;font = 6x12-ISO8859-1.pil
font = timR24-ISO8859-1.pil  ; font for captions
color = 255,255,0            ; color of captions

[contours]
type = contour
interval = 1200  ; height interval between contours (starting at 0)
; alternatively, instead of interval use:
; steps = 20     ; number of contour steps per map

[river]
type = river
alpha = 90       ; alpha of river overlay
color = default  ; color of river overlay; default = use value from map data

[bumpmap]
type = bumpmap
z_scale = 10.0               ; exaggeration factor applied to heightfield
light_vect = -1.0,1.0,-1.0   ; light direction vector (-z is 'down')
light_min = 0.4              ; minimum light level (multiplies base color)
light_max = 1.2              ; maximum light level (multiplies base color)

; A 'fixture' renderer specifies a number of sub-sections to use depending on
; the .nif being drawn. Anything not explicitly named uses the section
; named in 'default'. 'classify' delegates fixture classification to another
; section.

[trees]
type = fixture
classify = fixture-classes   ; map fixture names to classes using this section
tree = draw.tree             ; draw trees using the settings in [draw.tree]
default = draw.none          ; all other fixtures are not drawn

[structures]
type = fixture
classify = fixture-classes
tree = draw.none             ; don't draw trees
default = draw.shaded        ; all other fixtures are flat-shaded

;
; These are the fixture subsections.
;
; type is one of:
;   none: don't draw the fixture at all
;   wireframe: draw just the wireframe of the fixture
;      expects color=RGBA
;      use color=default to use the color specified by the map data
;   solid: draw and fill the wireframe 
;      expects fill=RGBA and outline=RGBA
;      use fill=none or outline=none to turn them off
;      use fill=default and outline=default to use the color specified by the 
;      map data
;   shaded: flat-shade and fill the wireframe
;      expects color=RGBA
;      use color=default to use the color specified by the map data
;
; layer controls the order in which fixtures are drawn. All fixtures in layer
; 0 are drawn first, then all fixtures in layer 1, and so on.
; (this ordering is per renderer instance, so it's irrelevant for the
; particular example below since I use two separate renderers anyway)

[draw.tree]
type=shaded
light_vect = -1.0,1.0,-1.0   ; light direction vector (-z is 'down')
light_min = 0.4              ; minimum light level (multiplies base color)
light_max = 1.0              ; maximum light level (multiplies base color)
;color=0,225,0,64             ; base color for fixtures, default = use map info
color=0,204,0,96
;color=default
layer=0

[draw.shaded]
type=shaded
light_vect = -1.0,1.0,-1.0   ; light direction vector (-z is 'down')
light_min = 0.4              ; minimum light level (multiplies base color)
light_max = 1.0              ; maximum light level (multiplies base color)
;color=default
color=255,255,255,255
layer=1

[draw.none]
type=none

[fixture-classes]
; setting 'classify=fixture-classes' above means this section is used
; to classify .nif filenames to fixture type
b_bush1 = tree
b_htoak1 = tree
b_htoakb = tree
bbare1 = tree
bbare2 = tree
bmtntre1 = tree
bpinea = tree
bpinetree = tree
brtstmp2 = tree
brushclump = tree
brushes = tree
bspanmoss = tree
btaltre1 = tree
bvgrn1 = tree
bvrgrn1 = tree
bwillow = tree
creepywebpine = tree
elm1 = tree
elm2 = tree
fallencreepytree = tree
hbareskny = tree
hbirchsingle = tree
hdeadtree = tree
helm = tree
helm2 = tree
hfirbtree = tree
hlog = tree
hlogbent = tree
hlowtree = tree
hoaktree = tree
hol-stmp = tree
holdgrove = tree
hstumpy = tree
hstumpyleaf = tree
hweepwill = tree
lillypads = tree
log1 = tree
log1-s = tree
log2 = tree
log2-s = tree
n_stump = tree
n_stump-s = tree
nbirchtree = tree
npinea = tree
npinea-s = tree
npinedk = tree
npinetree = tree
npinetree-s = tree
npintre-s = tree
npintre1 = tree
npintree = tree
nreeds = tree
nrushes = tree
nvrgrn1-s = tree
oak1 = tree
pinetree = tree
pintre1 = tree
talloak1 = tree
vrgrn1 = tree

